diff -Nru linux-2.6.34.14/Makefile linux-2.6.34.142/Makefile
--- linux-2.6.34.14/Makefile	2013-01-17 06:55:31.000000000 +0900
+++ linux-2.6.34.142/Makefile	2017-08-24 21:55:07.000000000 +0900
@@ -1,7 +1,7 @@
 VERSION = 2
 PATCHLEVEL = 6
 SUBLEVEL = 34
-EXTRAVERSION = .14
+EXTRAVERSION = .140001
 NAME = Sheep on Meth
 
 # *DOCUMENTATION*
diff -Nru linux-2.6.34.14/arch/x86/ia32/ia32entry.S linux-2.6.34.142/arch/x86/ia32/ia32entry.S
--- linux-2.6.34.14/arch/x86/ia32/ia32entry.S	2013-01-17 06:55:31.000000000 +0900
+++ linux-2.6.34.142/arch/x86/ia32/ia32entry.S	2017-08-24 21:46:13.000000000 +0900
@@ -848,4 +848,5 @@
 	.quad compat_sys_rt_tgsigqueueinfo	/* 335 */
 	.quad sys_perf_event_open
 	.quad compat_sys_recvmmsg
+	.quad sys_flip
 ia32_syscall_end:
diff -Nru linux-2.6.34.14/arch/x86/include/asm/unistd_32.h linux-2.6.34.142/arch/x86/include/asm/unistd_32.h
--- linux-2.6.34.14/arch/x86/include/asm/unistd_32.h	2013-01-17 06:55:31.000000000 +0900
+++ linux-2.6.34.142/arch/x86/include/asm/unistd_32.h	2017-08-24 21:44:38.000000000 +0900
@@ -343,10 +343,11 @@
 #define __NR_rt_tgsigqueueinfo	335
 #define __NR_perf_event_open	336
 #define __NR_recvmmsg		337
+#define __NR_flip  338
 
 #ifdef __KERNEL__
 
-#define NR_syscalls 338
+#define NR_syscalls 339
 
 #define __ARCH_WANT_IPC_PARSE_VERSION
 #define __ARCH_WANT_OLD_READDIR
diff -Nru linux-2.6.34.14/arch/x86/include/asm/unistd_64.h linux-2.6.34.142/arch/x86/include/asm/unistd_64.h
--- linux-2.6.34.14/arch/x86/include/asm/unistd_64.h	2013-01-17 06:55:31.000000000 +0900
+++ linux-2.6.34.142/arch/x86/include/asm/unistd_64.h	2017-08-24 21:45:19.000000000 +0900
@@ -663,6 +663,8 @@
 __SYSCALL(__NR_perf_event_open, sys_perf_event_open)
 #define __NR_recvmmsg				299
 __SYSCALL(__NR_recvmmsg, sys_recvmmsg)
+#define __NR_flip  300
+__SYSCALL(__NR_flip, sys_flip)
 
 #ifndef __NO_STUBS
 #define __ARCH_WANT_OLD_READDIR
diff -Nru linux-2.6.34.14/arch/x86/kernel/syscall_table_32.S linux-2.6.34.142/arch/x86/kernel/syscall_table_32.S
--- linux-2.6.34.14/arch/x86/kernel/syscall_table_32.S	2013-01-17 06:55:31.000000000 +0900
+++ linux-2.6.34.142/arch/x86/kernel/syscall_table_32.S	2017-08-24 21:43:49.000000000 +0900
@@ -337,3 +337,4 @@
 	.long sys_rt_tgsigqueueinfo	/* 335 */
 	.long sys_perf_event_open
 	.long sys_recvmmsg
+	.long sys_flip  // 338
diff -Nru linux-2.6.34.14/include/asm-generic/unistd.h linux-2.6.34.142/include/asm-generic/unistd.h
--- linux-2.6.34.14/include/asm-generic/unistd.h	2013-01-17 06:55:31.000000000 +0900
+++ linux-2.6.34.142/include/asm-generic/unistd.h	2017-08-24 21:47:45.000000000 +0900
@@ -626,9 +626,11 @@
 __SYSCALL(__NR_accept4, sys_accept4)
 #define __NR_recvmmsg 243
 __SYSCALL(__NR_recvmmsg, sys_recvmmsg)
+#define __NR_flip 244
+__SYSCALL(__NR_copy_buffer, sys_copy_buffer)
 
 #undef __NR_syscalls
-#define __NR_syscalls 244
+#define __NR_syscalls 245
 
 /*
  * All syscalls below here should go away really,
diff -Nru linux-2.6.34.14/include/linux/syscalls.h linux-2.6.34.142/include/linux/syscalls.h
--- linux-2.6.34.14/include/linux/syscalls.h	2013-01-17 06:55:31.000000000 +0900
+++ linux-2.6.34.142/include/linux/syscalls.h	2017-08-24 21:49:16.000000000 +0900
@@ -847,4 +847,6 @@
 			unsigned long fd, unsigned long pgoff);
 asmlinkage long sys_old_mmap(struct mmap_arg_struct __user *arg);
 
+asmlinkage long sys_flip(char *p, int len);
+
 #endif
diff -Nru linux-2.6.34.14/kernel/timer.c linux-2.6.34.142/kernel/timer.c
--- linux-2.6.34.14/kernel/timer.c	2013-01-17 06:55:31.000000000 +0900
+++ linux-2.6.34.142/kernel/timer.c	2017-08-24 21:54:01.000000000 +0900
@@ -1281,6 +1281,32 @@
 	return task_tgid_vnr(current);
 }
 
+
+SYSCALL_DEFINE(flip, char *, p, int, len)
+{
+  char *A, *B;
+  int i;
+  if(!p || len < 0) return -EINVAL;
+
+  A = kmalloc(len, GFP_KERNEL);
+  B = kmalloc(len, GFP_KERNEL);
+  if(!A || !B) return -ENOMEM;
+
+  if(copy_from_user(A, p, len))
+    return -EFAULT;
+
+  for(i = 0; i < len; ++i){
+    B[i] = A[len-i-1];
+  }
+
+  if(copy_to_user(p, B, len))
+    return -EFAULT;
+
+  kfree(A); kfree(B);
+
+  return len;
+}
+
 /*
  * Accessing ->real_parent is not SMP-safe, it could
  * change from under us. However, we can use a stale
